-- GROUP BY 
--remove duplicate similar to distinct
-- SELECT column1 AGGREGATE(column2) FROM tablename GROUP BY colum1
SELECT movie_lang,COUNT(movie_lang) FROM movies GROUP BY movie_lang
SELECT movie_lang,AVG(movie_length) FROM movies GROUP BY movie_lang
--ascending
SELECT movie_lang,MIN(movie_length),MAX(movie_length) FROM movies GROUP BY movie_lang ORDER BY MAX(movie_length);
--Descending
SELECT movie_lang,MIN(movie_length),MAX(movie_length) FROM movies GROUP BY movie_lang ORDER BY MAX(movie_length) DESC;
--grouping multiple column
--SELECT col1,col2,col3 , AGGREGATE(col4) FROM tablename GROUP BY col1,col2,col3

--Order of execution
--	FROM-> WHERE-> GROUP BY-> HAVING-> SELECT-> DISTINCT-> ORDER BY-> LIMIT

-- HAVING() -> search condition for a group or an aggregate
-- mostly used with group by for filtering with condition
-- can't able to use aliases in having bcz it executes before select
-- having clause calculates on aggregate function and not actual select column

--SELECT col1,AGGREGATE(col2) from tablename GROUP BY col1 HAVING cond;
--HAVING AGGREGATE_FUNCTION(col1)=VALUE
--HAVING AGGREGATE_FUNCTION(col2)>=VALUE

-- list movies lang where sum total len of the movies is grater than 200
SELECT 
	movie_lang,
	SUM(movie_length)
FROM movies
GROUP BY movie_lang
HAVING SUM(movie_length)>200
ORDER BY SUM(movie_length)


--having vs where
-- where -> works on SELECT columns and not on result group
-- having -> works on result group


--handling null values in group by
CREATE TABLE emp(emp_id SERIAL PRIMARY KEY,emp_name VARCHAR(20),dept VARCHAR(20),sal INT)
INSERT INTO emp(emp_name,dept,sal)VALUES
('XYZ','GFD',78),
('XYZ','GFD',58),
('XYZ','lkj',59),
('XYZ','lkj',89),
('XYZ',NULL,67),
('XYZ',NULL,79);
SELECT * FROM emp;

SELECT 
	dept,
	COUNT(sal) AS tot
FROM emp
GROUP BY 
	dept
ORDER BY dept
--for handling the null
-- COALESCE(source,'') -> remove the null
--COALESCE(dept,'No dept') -> replace the null with 'No dept'
SELECT 
	COALESCE(dept,'No department') AS department,
	COUNT(sal) AS tot
FROM emp
GROUP BY 
	dept
ORDER BY dept


